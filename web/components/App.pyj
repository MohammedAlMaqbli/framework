import orm.models as models
import orm.tools as tools
import web.react as react
from web.routes import routes

api = client.api

F7App, Statusbar, Panel, View, Popup, Page, Navbar, NavRight, Link, Block = react.get_framework_components('App', 'Statusbar', 'Panel', 'View', 'Popup', 'Page', 'Navbar', 'NavRight', 'Link', 'Block')

def App(props):
    href = window.location.origin + window.location.pathname
    manifest = {
    "short_name": tools.configuration.app_name or "App",
    "name": tools.configuration.long_name or tools.configuration.app_name or "App",
    "description": tools.configuration.app_description or "A webclient for Rapydframework based apps",
    "scope": href.substring(0, href.lastIndexOf('/')) + '/',
    "start_url": href.substring(0, href.lastIndexOf('/')) + '/index.html',
    "display": 'standalone',
    "background_color": 'white',
    "icons": [{
      "src": href.substring(0, href.lastIndexOf('/')) + '/' + (tools.configuration.icon_big or "icon-512.png"),
      "sizes": "512x512",
      "type": "image/png"
    },
    {
      "src": href.substring(0, href.lastIndexOf('/')) + '/' + (tools.configuration.icon_small or "icon-192.png"),
      "sizes": "192x192",
      "type": "image/png"
    }]}

    manifestRegistered = False
    @async
    def registerManifest():
        nonlocal manifestRegistered
        if manifestRegistered or not window.fetch: return
        validManifest = None
        try:
            request = await [fetch(document.getElementById('rapyd-app-manifest').href)]
            manifest_json = await [result.json()]
            if manifest_json.start_url: validManifest = True
        except: #Exception as error:
           pass
        if validManifest: return
        manifest.theme_color = document.querySelector('meta[name=theme-color]').content
        blob = new Blob([JSON.stringify(manifest)], {'type': 'application/json'})
        document.getElementById('rapyd-app-manifest').setAttribute('href', URL.createObjectURL(blob))
        manifestRegistered = True
    api.globals.registerManifest = registerManifest

    f7params = {
    'id': 'org.rapyd.client',
    'name': 'App',
    'theme': 'md',
    'routes': routes,
    'panel': {
      'swipe': 'left',
      'leftBreakpoint': 960,
      'swipeThreshold': 230,
    }}

    return (
      F7App(params=f7params, colorTheme=tools.configuration.color_theme or 'gray',

        Statusbar(),

        Panel(left=True, reveal=True,
          View(url="/panel-left/")
        ),

        Panel(right=True, cover=True,
          View(url="/panel-right/")
        ),

        View(id="main-view", url="/", main=True, className="ios-edges", preloadPreviousPage=False, pushState=True),

        Popup(id="popup",
          View(
            Page(
              Navbar(title="Popup",
                NavRight(
                  Link(popupClose=True, 'Close')
                )
              ),
              Block('')
            )
          )
        )
      )
    )
