import orm.models as models
import orm.tools as tools
import web.react as react

BlockTitle, div = react.get_framework_components('BlockTitle', 'div')

class Group(React.Component):

    @async
    def componentDidMount(self):
        def wait():
            return self.refs.group
        await [tools.client.api.wait_exist(wait)]
        await [tools.client.api.wait(0)]
        if not this.props.title:
           index = 0
           for element in [self.refs.group.previousElementSibling, self.refs.group.nextElementSibling]:
               if element and (element.offsetLeft == 0 if not index else element.offsetLeft > 0) and element.querySelector('div.component-group-title'):
                  self.setState({'previousTitle': True})
                  break
               index += 1;

    def componentWillUnmount(self):
        if (self.interval) clearInterval(self.interval)

    def render(self, props):
        invisible = props.invisible
        if v'props.invisible instanceof Function':
           invisible = props.invisible(models.env.context.active_id)
        if props.width and props.width.slice(-1) == '%' and parseInt(props.width.slice(0, -1)) > 97:
           props.width = '97%';
        style = {'float': 'left', 'width': props.width, 'padding': '10px', 'marginTop': '20px', 'height': 'auto'}
        if invisible:
           style = tools.merge(style, {'position': 'absolute', 'left': '-9999px', 'top': '-9999px'})
        title_style = {'fontSize': '25px', 'lineHeight': 'unset'}
        if self.state.previousTitle:
           title_style.height = '37px'
        return (
          div (ref="group", className="component-group", style=style,
            (props.title or self.state.previousTitle) and (
              BlockTitle (className="component-group-title", style=title_style, props.title or '')
            ),
            props.children,
          )
        )

react.register_component(Group)
