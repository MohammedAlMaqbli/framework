
def wait(ms):
    return new Promise(
    def (resolve, reject):
        setTimeout(
        def timeout():
            resolve()
        , ms)
    )

@async
def create_upload_button():
    def wait(): document.querySelector('div.ag-body-container') and document.querySelector('div.ag-body-container').children.length
    await [window.tools.wait_exist(wait)]
    if document.getElementById('upload_shortcut'):
       document.getElementById('upload_shortcut').remove()
    create_element = document.querySelector('.data-table-title .button.button-fill')
    if not create_element: return
    defaults = {'purchase.order': 'po', 'mrp.bom': 'bom', 'mrp.sequence': 'sequence_mcvt', 'stock.trolley.type': 'daisha_mcvt'}
    upload_button = '<a id="upload_shortcut" class="button" href="#" style="display: inline-block;background-color: rgb(255, 255, 255);">Upload</a>'
    create_element.insertAdjacentHTML('afterend', upload_button)
    def onclick():
        model = models.env.context.active_model
        if defaults[model]: models.env.context.default_import_type = defaults[model]
        tools.navigate('/form/hppm.data')
    document.getElementById('upload_shortcut').onclick = onclick
    if models.env.context.active_model != 'stock.picking.list': return
    first_row = document.querySelector('div.ag-body-container div[row-id="0"]')
    sequence = first_row.querySelector('div[col-id=sequence]').innerHTML
    for column in document.querySelectorAll('div.ag-body-container div[col-id=sequence]'):
        if column.innerHTML != sequence: continue
        column.parentElement.style.color = 'red'

#if v'typeof window' != 'undefined': window.create_upload_button = create_upload_button

def show_qrcode(id, field):
    def show():
        if not models.env.context.active_id or not models.env.context.active_id[field]: return
        qrcode = document.getElementById(id)
        QRCode = window.QRCode
        new QRCode(qrcode, models.env.context.active_id[field])
        button = document.getElementById(id + '_button')
        if button:
           def onclick():
               qrcode.insertAdjacentHTML('beforeend', '<h2 style="font-family: Roboto,system-ui,Noto,Helvetica,Arial,sans-serif">' + qrcode.title + '</h2>')
               printElement(qrcode)
           button.onclick = onclick
    return show
