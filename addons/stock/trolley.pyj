import orm.models as models
import orm.fields as fields
import orm.api as api
from ir.ui import menu, view
from utils import create_upload_button, show_qrcode
from stock.location import defaults as locations

class StockTrolley(models.Model):
    _name = 'stock.trolley'

    @async
    def _get_type(self):
        picking_id = await [self.env['stock.picking'].with_context(limit=1).search(['trolley_id', '=', self.id])]
        return picking_id.trolley_type_id

    name = fields.Char(string="Trolley Number", required=True, index=True)
    location_id = fields.Many2one('stock.location', string="Current Location")
    pack_ids = fields.One2many('stock.pack', 'trolley_id', string="Packs")
    move_ids = fields.One2many('stock.move', 'trolley_id', string="Movements")
    trolley_type_id = fields.Many2one('stock.trolley.type', string="Trolley Type", compute=_get_type, store=False)

    @async
    def print_qrcode(self):
        length = self.length
        parent_div = document.createElement('div')
        parent_div.style.display = 'flex'
        parent_div.style.flexWrap = 'wrap'
        parent_div.style.width = '297mm'
        for record in self:
            div = document.createElement('div')
            div.style.margin = 'auto'
            div.style.marginBottom = '20px'
            new QRCode(div, record.name)
            parent_div.appendChild(div)
        for div in parent_div.children:
            div.insertAdjacentHTML('beforeend', '<h2 style="font-family: Roboto,system-ui,Noto,Helvetica,Arial,sans-serif">' + div.title + '</h2>')
        def wait(): return parent_div.querySelectorAll('img[src]').length == length
        await [tools.wait_exist(wait)]
        window.printElement(parent_div)

    @api.server(async=True)
    def update_location(self, trolley, location_id):
        trolley_id = await [self.search(['name', '=', trolley])]
        trolley_id.write({'location_id': location_id})
        picking_list_id = await [self.env['stock.picking.list'].with_context(order='date desc').search(['trolley_id', '=', trolley_id.id])]
        pack_ids = await [self.env['stock.pack'].browse(picking_list_id.pack_ids)]
        #location_map = {locations[key]: key for key in locations}
        quant_map = {}
        @async
        def create_quant_report(pack_id):
            if quant_map[pack_id.product_id]: return
            quant_map[pack_id.product_id] True
            quant_report_id = await [self.env['stock.quant.report'].search(['product_id', '=', pack_id.product_id])]
            if quant_report_id.length: return
            return self.env['stock.quant.report'].create({'product_id': pack_id.product_id})
        @async
        def create_quant(pack_id):
            create_quant_report(pack_id)
            if pack_id.location_id:
               await [self.env['stock.quant'].create({'product_id': pack_id.product_id, 'product_qty': -pack_id.product_qty, 'location_id': pack_id.location_id})]
            await [self.env['stock.quant'].create({'product_id': pack_id.product_id, 'product_qty': pack_id.product_qty, 'location_id': location_id})]
        for pack_id in pack_ids:
            await ([create_quant(pack_id), self.env['stock.move'].create({'pack_id': pack_id.id, 'product_id': pack_id.product_id, 'product_qty': pack_id.product_qty, 'location_src_id': pack_id.location_id, 'location_dest_id': location_id}), pack_id.write({'location_id': location_id})])
        #picking_list_id = await (picking_list_id)
        picking_list_id.update_location(location_id, any(pack_id.is_pulley for pack_id in pack_ids)).catch(console.error)
        if location_id in [locations[location + '_id'] for location in ('internal', 'scr', 'assy')]: return
        return picking_list_id.check_pulley()

StockTrolley()

menu.add(id='trolley', parent='agv_chasun', model='stock.trolley', string="Trolley (Daisha)", sequence=1)

view.add(model='stock.trolley', mode='tree', arch="""
<tree title="Trolley (Daisha)">
    <field name="name"/>
    <!--<field name="trolley_type_id"/>-->
</tree>
""", action={'print_qrcode': 'Print'})

view.add(init=show_qrcode('trolley_qrcode', 'name'), model='stock.trolley', mode='form', arch="""
<form>
    <sheet>
        <group>
            <field name="name"/>
            <a class="button button-fill" id="trolley_qrcode_button" style="display: block; float: left; width: auto; margin: 10px;">Print</a>
        </group>
        <group>
            <div id="trolley_qrcode"/>
        </group>
        <group width="100%" title="Packs">
            <field name="pack_ids">
                <tree>
                    <field name="product_id"/>
                    <field name="product_qty"/>
                    <field name="trolley_type_id"/>
                </tree>
            </field>
        </group>
        <group width="100%" title="Movements">
            <field name="move_ids">
                <tree>
                    <field name="product_id"/>
                    <field name="product_qty"/>
                    <field name="trolley_type_id"/>
                    <field name="location_src_id"/>
                    <field name="location_dest_id"/>
                </tree>
            </field>
        </group>
    </sheet>
</form>
""")

class StockTrolleyType(models.Model):
    _name = 'stock.trolley.type'

    name = fields.Char(string="Trolley Type", index=True)
    reference = fields.Char(string="Reference")
    type = fields.Selection(['mcvt', 'MCVT'], ['fwd', '4WD'], ['flexi', 'Flexi'], string="Line Type")
    mcvt_part_ids = fields.One2many('product.product', 'mcvt_trolley_type_id', string="MCVT Parts")
    fwd_part_ids = fields.One2many('product.product', 'fwd_trolley_type_id', string="4WD Parts")
    flexi_part_ids = fields.One2many('product.product', 'flexi_trolley_type_id', string="Flexi Parts")

StockTrolleyType()

menu.add(id='trolley_type', parent='master_data', model='stock.trolley.type', string="Fitting Daisha", sequence=2)

view.add(model='stock.trolley.type', init=create_upload_button, mode='tree', arch="""
<tree>
    <field name="name"/>
    <field name="type"/>
</tree>
""")

view.add(model='stock.trolley.type', mode='form', arch="""
<form>
    <sheet>
        <group>
            <field name="name"/>
        </group>
        <group>
            <field name="reference"/>
        </group>
        <group width="100%" title="Parts" invisible="active_id.type != 'mcvt'">
            <field name="mcvt_part_ids">
                <tree>
                    <field name="name"/>
                    <field name="code"/>
                </tree>
            </field>
        </group>
        <group width="100%" title="Parts" invisible="active_id.type != 'fwd'">
            <field name="fwd_part_ids">
                <tree>
                    <field name="name"/>
                    <field name="code"/>
                </tree>
            </field>
        </group>
        <group width="100%" title="Parts" invisible="active_id.type != 'flexi'">
            <field name="flexi_part_ids">
                <tree>
                    <field name="name"/>
                    <field name="code"/>
                </tree>
            </field>
        </group>
    </sheet>
</form>
""")

class StockPickupZone(models.Model):
    _name = 'stock.pickup.zone'

    name = fields.Char(string="Name", required=True, index=True)

StockPickupZone()

menu.add(id='pickup_zone', parent='agv_chasun', model='stock.pickup.zone', string="Pickup Zone", sequence=5)

view.add(model='stock.pickup.zone', mode='tree', arch="""
<tree>
    <field name="name"/>
</tree>
""")

view.add(init=show_qrcode('pickup_qrcode', 'name'), model='stock.pickup.zone', mode='form', arch="""
<form>
    <sheet>
        <group>
           <field name="name"/>
            <a class="button button-fill" id="pickup_qrcode_button" style="display: block; float: left; width: auto; margin: 10px;">Print</a>
        </group>
        <group>
           <div id="pickup_qrcode"/>
        </group>
    </sheet>
</form>
""")

class StockReceiveZone(models.Model):
    _name = 'stock.receive.zone'

    name = fields.Char(string="Name", required=True, index=True)

StockReceiveZone()

menu.add(id='receive_zone', parent='receiving', model='stock.receive.zone', string="LC Zone", sequence=1)

view.add(model='stock.receive.zone', mode='tree', arch="""
<tree>
    <field name="name"/>
</tree>
""")

view.add(init=show_qrcode('lc_qrcode', 'name'), model='stock.receive.zone', mode='form', arch="""
<form>
    <sheet>
        <group>
           <field name="name"/>
            <a class="button button-fill" id="lc_qrcode_button" style="display: block; float: left; width: auto; margin: 10px;">Print</a>
        </group>
        <group>
           <div id="lc_qrcode"/>
        </group>
    </sheet>
</form>
""")

class TestAgv(models.Model):
    _name = 'test.agv'

    route = fields.Integer(string="Route")
    ip_address = fields.Char(string="IP Address")

    @async
    def call_agv(self):
        try:
            if not self.route:
               return tools.dialog.alert('Route tidak boleh kosong')
            response = await (fetch('http://' + (self.ip_address or window.location.host) + ':8000/?route=' + self.route))
            text = await (response.text())
            tools.dialog.alert(text)
        except Exception as error:
            window.alert(error)

TestAgv()

menu.add(id='test_agv', parent='settings', string='Test AGV', model='test.agv', view_id='test.agv.wizard', sequence=11)

view.add(model='test.agv', mode='wizard', arch="""
<form>
    <sheet>
        <group>
            <field name="route"/>
        </group>
        <group>
            <field name="ip_address"/>
        </group>
        <group width="100%">
            <button name="call_agv" string="Call AGV"/>
        </group>
    </sheet>
</form>
""")

class VisualControl(models.Model):
    _name = 'visual.control'

    def open_sequence(self):
        window.open('./vc-sequence.html')

    def open_picking_list(self):
        window.open('./vc-picking.html')

VisualControl()

menu.add(id='visual_control', string='Visual Control', model='visual.control', view_id='visual.control.open', sequence=500)

view.add(model='visual.control', mode='open', arch="""
<form>
    <sheet>
        <group>
            <button name="open_sequence" string="Production Sequence"/>
        </group>
        <group>
            <button name="open_picking_list" string="Picking List"/>
        </group>
    </sheet>
</form>
""")
