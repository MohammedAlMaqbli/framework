import orm.models as models
import orm.fields as fields
import orm.tools as tools
import orm.api as api
from ir.ui import view, menu

class StockReceivingWizard(models.Model):
    _name = 'stock.receiving.wizard'

    #name = fields.Char(string="")
    scan = fields.Char(string="Laser Scan")
    order_ids = fields.Many2many('purchase.order.pack', string="Purchase Orders")
    received = fields.Boolean(string="Received")

    @api.onchange('scan', async=True)
    def onchange_scan(self):
        if not self.scan: return
        value = JSON.parse(self.scan)
        order_id = await [self.env['purchase.order.pack'].browse(value.id)]
        self.scan = ''
        if not order_id.length: return
        self.order_ids.push(order_id.id)
        #tools.navigate('/form/purchase.order?id=' + order_id.id)

    @async
    def receive(self):
        order_ids = await (self.env['purchase.order.pack'].browse(self.order_ids))
        await ([order_ids.receive(), self.write({'received': True})])

StockReceivingWizard()

menu.add(id='scanner', string="Scanner", sequence=5)
menu.add(id='scanner_receiving', string="Receiving", parent='scanner', model='stock.receiving.wizard', view_id='stock.receiving.wizard.scan', sequence=1)

view.add(model='stock.receiving.wizard', mode='scan', arch="""
<form>
    <sheet>
        <group>
            <field name="scan"/>
        </group>
        <group width="100%">
            <field name="order_ids">
                <tree>
                    <field name="name"/>
                    <field name="product_id"/>
                    <field name="product_qty"/>
                    <field name="vendor"/>
                </tree>
            </field>
        </group>
        <group>
            <button name="receive" string="Receive" invisible="active_id.received == True"/>
        </group>
    </sheet>
</form>
""")

class StockPickingWizard(models.Model):
    _name = 'stock.picking.wizard'

    #name = fields.Char(string="")
    scan = fields.Char(string="Laser Scan")

    @api.onchange('scan', async=True)
    def onchange_scan(self):
        if not self.scan: return
        picking_list_id = await (self.env['stock.picking.list'].search(['name', '=', self.scan]))
        self.scan = ''
        if not picking_list_id.length: return
        tools.navigate('/form/stock.picking.list?id=' + picking_list_id.id)

StockPickingWizard()

menu.add(id='scanner', string="Scanner", sequence=5)
menu.add(id='scanner_picking', string="Picking", parent='scanner', model='stock.picking.wizard', view_id='stock.picking.wizard.scan', sequence=2)

def init_picking():
    form = this
    if not form.refs.camera: return
    @async
    def onDetect(data):
        window.alert(data.codeResult.code)
        picking_list_id = await (models.env['stock.picking.list'].search(['name', '=', data.codeResult.code]))
        if not picking_list_id.length: return
        tools.navigate('/form/stock.picking.list?id=' + picking_list_id.id)
    form.refs.camera.onDetect = onDetect

view.add(model='stock.picking.wizard', mode='scan', init=init_picking, arch="""
<form>
    <sheet>
        <group>
            <field name="scan"/>
        </group>
        <group width="100%">
            <scanner-camera ref="camera"/>
        </group>
    </sheet>
</form>
""")



class ReceiveInhouse(models.Model):
    _name = 'stock.receive.inhouse'

    product_id = fields.Many2one('product.product', string="Inhouse Part")
    product_qty = fields.Float(string="Quantity")

    @async
    def receive(self):
        product_id = await [self.env['product.product'].browse(self.product_id)]
        order_pack_id = await [self.env['purchase.order.pack'].create({'name': 'PO-Inhouse-' + tools.format(new Date(), 'ynj'), 'product_id': product_id.id, 'product_qty': self.product_qty, 'part_no': product_id.code, 'inhouse_ckd': True})]
        await [order_pack_id.receive(immediate=True)]
        return order_pack_id.print_label()

ReceiveInhouse()

menu.add(id='receiving', string="Receiving", sequence=20)
menu.add(id='receiving_inhouse', parent='receiving', model='stock.receive.inhouse', view_id='stock.receive.inhouse.wizard', string="Inhouse", sequence=1)
#menu.add(id='receiving_print', parent='receiving', model='purchase.order.pack', string="Reprint Inhouse & CKD", sequence=3)

view.add(model='stock.receive.inhouse', mode='wizard', arch="""
<form>
    <sheet>
        <group>
            <field name="product_id" domain="['type', '=', 'inhouse']"/>
        </group>
        <group>
            <field name="product_qty"/>
        </group>
        <group>
            <button name="receive" string="Receive"/>
        </group>
    </sheet>
</form>
""")
